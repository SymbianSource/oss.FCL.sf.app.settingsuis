/*
* Copyright (c) 2005-2006 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0""
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project DefaultApp Server
*
*/


#include <avkon.rh>
#include <avkon.rsg>
#include <avkon.hrh>
#include <avkon.loc>
#include <avkon.mbg>

#include <eikon.rh>
#include <eikon.rsg>

#include <uikon.rh>

#include <bldvariant.hrh>

#include <appinfo.rh>//localisable app info
#include <data_caging_paths_strings.hrh>

#include <services_db.rh>
#include "das_gsentries.rh"
#include "das.hrh"
#include <defaultappserver.loc>
#include <services_db.loc>

NAME DFAP
RESOURCE RSS_SIGNATURE { }
RESOURCE TBUF { buf=""; }



// ---------------------------------------------------------   
// Define default menu and CBA key.
// ---------------------------------------------------------
//
RESOURCE EIK_APP_INFO
    {
    menubar=r_das_menubar;
    cba = r_das_softkeys_options_back__change;//R_AVKON_SOFTKEYS_OPTIONS_BACK;
    }

// ---------------------------------------------------------
// r_das_menubar
// Menubar for Default App Server
// ---------------------------------------------------------
//
RESOURCE MENU_BAR r_das_menubar
    {
    titles=
        {
        MENU_TITLE 
            { 
            menu_pane = r_das_menu;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_das_menu
// Menu for Options
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_das_menu
    {
    items=
        {
        MENU_ITEM 
            { 
            flags = EEikMenuItemAction;
            command = EAknCmdOpen;
            txt = qtn_options_change; 
            },
        MENU_ITEM 
            { 
            command = EAknCmdFindPopupActivated; 
            txt = qtn_options_find; 
            },
        MENU_ITEM 
            { 
            command = EDasCmdAdvanced; 
            txt = qtn_options_advanced;
            },
        MENU_ITEM
            {
            cascade = r_das_menu_original_settings;
            txt = qtn_da_options_reset;
            },
        MENU_ITEM 
            { 
            command = EAknCmdHelp;
            txt = qtn_options_help; 
            },
        MENU_ITEM 
            { 
            command = EAknCmdExit; 
            txt = qtn_options_exit; 
            }
        };
    }
    
// ---------------------------------------------------------------------------
// r_das_menu_factory_settings
// Sub-menu for Factory settings
// This contains one item, but additional items will be added to it
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_das_menu_original_settings
    {
    items =
        {
        MENU_ITEM
            {
            command = EDasCmdResetSelected;
            txt = qtn_da_options_reset_selected;
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM
            {
            command = EDasCmdResetAll;
            txt = qtn_da_options_reset_all;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_das_servicesmimes_listbox
// Listbox for the Services & MIMEs
// ---------------------------------------------------------------------------
//
RESOURCE LISTBOX r_das_servicesmimes_listbox
    {
    flags = EAknListBoxSelectionList;
    }

// ---------------------------------------------------------------------------
// r_da_title_app
// Application title
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_da_title_app 
    {
    buf = qtn_da_title_app;
    }

// ---------------------------------------------------------------------------
// r_da_title_main
// Main view title
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_da_title_main 
    {
    buf = qtn_da_title_main;
    }

// ---------------------------------------------------------------------------
// r_da_title_popup_adv
// Advanced settings
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_da_title_advanced
    {
    buf = qtn_da_title_advanced;
    }




// resources for the simplified view


// ---------------------------------------------------------------------------
// r_da_tasks
// This is the list of tasks. For each task, there are 3 items:
//  -the task name (this will be shown in the list)
//  -the MIME label (the selected default application for the task will be set as default for Open and this MIME)
//  -a list of Services & MIMEs that belong to the task: all applications that can handle at least one Service & MIME
//   from the list, may become defaults for the task (however, only for the Services & MIMEs the application supports).
// ---------------------------------------------------------------------------
//
RESOURCE DAS_GS_TASKS r_da_tasks
    {
    tasks=
        {
        DAS_GS_TASK_ENTRY
            {
            task_name = qtn_da_main_browse;
            //USE_TASK_TITLE
            task_title = qtn_da_title_popup_browse;

            mime_label = "application/x-web-browse";
            service_mimes =
                {
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "text/html"; }
                };
            }, //browse web task
        DAS_GS_TASK_ENTRY
            {
            task_name = qtn_da_main_play_music;
            //
            task_title = qtn_da_title_popup_music;

            mime_label = "application/x-audio-play";
            service_mimes =
                {
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/mp3"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/mpeg"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-mp3"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/mpegurl"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-mpegurl"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/3gpp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/3gpp2"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/mp4"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/aac"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/basic"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/amr"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/amr-wb"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/awb"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-amr"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-epoc-wve"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-sibo-wve"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/wav"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-wav"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-au"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/au"; },
                // SERIES 60 MIDI
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-midi"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/midi"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/sp-midi"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-beatnik-rmf"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-rmf"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/rmf"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/mobile-xmf"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/vnd.nokia.mobile-xmf"; },
                //qcelp
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/qcelp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/vnd.qcelp"; },
                //wma
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-ms-wma"; }
                //real audio (probably with system priority in the system)
                /* 
                 * Real Audio is commented out because leaving it here would be confusing for users:
                 * If Real Audio is uncommented below, both Music Player and RealPlayer will be listed 
                 * as handling music. However, the Music Player can not handle the Real Audio MIMEs
                 * (it can handle most of the MIMEs above this comment). The RealPlayer can only handle 
                 * the RealAudio MIMEs (commented here). So there is no overlapping between the 2 players.
                 * This would mean that whatever the client choses as the default player between these 2,
                 * they will still continue to play media as before. E.g. all mp3s, WMAs, AACs will be
                 * played with the MediaPlayer even if RealPlayer is chosed as default audio player.
                 *
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/vnd.rn-realaudio"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-pn-realaudio-plugin"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "audio/x-pn-realaudio"; }
                 */
                };
            }, //play music task
        DAS_GS_TASK_ENTRY
            {
            task_name = qtn_da_main_play_videos;
            //USE_TASK_TITLE
            task_title = qtn_da_title_popup_video;

            mime_label = "application/x-video-play";
            service_mimes =
                {
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "video/3gpp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "video/3gpp2"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "video/mpeg4"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "video/mp4"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "application/sdp"; },
                //following MIMEs are probably system priority in the platform player
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "video/vnd.rn-realvideo"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "application/vnd.rn-realmedia"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "application/x-pn-realmedia"; }
                };
            }, //play videos task
        DAS_GS_TASK_ENTRY
            {
            task_name = qtn_da_main_view_images;
            //USE_TASK_TITLE
            task_title = qtn_da_title_popup_image;

            mime_label = "application/x-image-view";
            service_mimes =
                {
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/jpeg"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/jpg"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/jp2"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/tiff"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-wmf"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/ico"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/gif"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/bmp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-bmp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-bitmap"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-xbitmap"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-win-bitmap"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-windows-bmp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/ms-bmp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-ms-bmp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/vnd.wap.wbmp"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/png"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-epoc-mbm"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/vnd.nokia.ota-bitmap"; },
                DAS_SERVICE_MIME
                    { service_uid = 0x10208DCA; mime = "image/x-ota-bitmap"; }
                };
            } //view images task
        }; //tasks
    }

        
// ---------------------------------------------------------------------------
// r_defaultappserver_localisable_app_info
// Localisable app info
// ---------------------------------------------------------------------------
//
RESOURCE LOCALISABLE_APP_INFO r_defaultappserver_localisable_app_info
    {
    short_caption = qtn_da_title_app;    
    caption_and_icon =
    CAPTION_AND_ICON_INFO
        {
        caption = qtn_da_title_app;
        };
    }

RESOURCE CBA r_das_softkeys_options_back__change
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt=text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt=text_softkey_back;},
        CBA_BUTTON {id=EAknCmdOpen; txt=qtn_msk_change;}
        };
    }
   
RESOURCE DIALOG r_das_dlg
    {
    flags = EAknDialogSelectionList | EEikDialogFlagNotifyEsc;
            
    buttons = r_das_softkeys_options_back__change;
    items = 
        {
        DLG_LINE
            {
            type = EAknCtDoubleListBox;

            id = ESelectionListControl;
            control = LISTBOX
                {
                flags = EAknListBoxSelectionList;
                };
            },
        DLG_LINE
            {
            itemflags = EEikDlgItemNonFocusing;
            id = EFindControl;
            type = EAknCtSelectionListPopupFind;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_da_services_mime
// This resource stores localized strings for the supported services, identified
// by their Uid and generic name.
// This resource is defined in the services_db.rh file
// ---------------------------------------------------------------------------
//
RESOURCE DAS_SERVICES r_da_service_mime
    {
    services = 
        {
        DAS_SERVICE_ENTRY
            {
            service_uid = 0x10208DCA; //KOpenServiceUid
            service_name = "Open";
            service_localized_name = qtn_da_service_open;
            }         
        };
    }    
    
    
